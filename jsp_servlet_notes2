[Java Brains]

Annotation vs Web.xml
	Annotation
		Advantage : simple & easy
		Servlet setting
			@WebServlet("/myServlet")
	
	Web.xml
		Advantage : lesser dependency
		Servlet setting
			<web-app>
				<servlet>
					<servlet-name>myServlet<servlet-name>
					<servlet-class>kr.co.iamtek.MyServlet<servlet-class>
				</servlet>
				<servlet-mapping>
					<servlet-name>myServlet<servlet-name>
					<url-pattern>/myServletpath</url-pattern>
				</servlet-mapping>
			</web-app>

8 HTTP Scope (Servlet)
	HttpServletRequest
		HTTP is a stateless/non-persistent protocol, it forgets previous request object data
	HTTPSession
		Expands HTTP scope/persistence across requests per browser-application connection
		One session per browser-application connection
		create : HttpSession session = request.getSession();
		set : session.setAttribute("savedUserName", userName);
		get : session.getAttribute("savedUserName")
	ServletContex
		Expands HTTP scope/persistence across all connections per application
		One context per application
		create : ServletContext context =  request.getServletContext();
		set : context.setAttribute()
		get : context.getAttribute()

9 Servlet Life cycle
	Init Service ServletConfig
	Description
		Single instance/object per Servlet with multiple threads for connections
		First call to servlet
			init(ServletConfig) -> service() -> doGet() or doPost()
		subsequent call to servlet
			service() -> doGet() or doPost()
		Servlet inheritance
			GenericServlet <- HttpServlet <- MyServlet
			GenericServlet : init(ServletConfig) init() service()
			HttpServlet : service()
			MyServlet : doGet() doPost()
	Doing something at first call
		set
			annotation
				@WebServlet(.., initParams={@WebInitParam(name="defaultName", value="John Doe")})
			web.xml
			  <servlet>
			  	...
			  	<init-param>
			  		<param-name>defaultName</param-name>
			  		<param-value>Jane Doh</param-value>
			  	</init-param>
			  </servlet>
		get : getServletConfig().getInitParameter("defaultName")